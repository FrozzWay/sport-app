user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept        on;
    use                 epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen 80;
        listen 443 ssl;

        ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"; 

        # Redirect non-https traffic to https
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }

        server_name {{ domain }}
        client_max_body_size 10M;

        location / {
            autoindex off;  # do not generate index.html exposing all files in directory (path)
            root /staticfiles;  # look for files here
            try_files $uri
                      /angular$uri /angular$uri/
                      /angular/index.html =404;  # fallback path
            access_log        off;
            log_not_found     off;
        }

        location ~ ^/(api/|docs|openapi.json) {
            rewrite ^/docs/ /docs permanent;
            rewrite ^/openapi.json/ /openapi.json permanent;
            proxy_pass http://uvicorn;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_buffering off;
        }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
     }

    upstream uvicorn {
      server unix:/tmp/uvicorn/uvicorn.sock;
    }
}